{
	"id": "247fa35d0895fa4294cfe5ec776665f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tutorial1/tutorial2.sol": {
				"content": "pragma solidity ^0.5.1;\r\n\r\nlibrary SafeMath { \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a); //error handling condition\r\n      return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n}\r\n \r\ncontract IntelliContract {\r\n\r\n    string public constant name = \"IntelliCoin\"; // solidity automatically creates a getter function for public variables\r\n    string public constant symbol = \"ITC\"; // getter function is a function used to retrive a specific value from ledger\r\n    uint8 public constant decimals = 18;  \r\n       \r\n// Setter functions : Function Which Creates or Updates A Value on Legder.\r\n// Getter Functions : Function Which Get or Fetches A Value From Legder.\r\n\r\n    event Approval(address indexed tokenOwner, address  spender, uint tokens);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n\r\n    \r\n\r\n\r\n    modifier onlyOwner  {\r\n        require (msg.sender == ownerCon);\r\n        _;\r\n    }\r\n    \r\n    mapping(address => uint256) balances;  \r\n    mapping(address => mapping (address => uint256)) allowed;  // nested mapping\r\n    // Nested Mapping Has 2 Keys & 1 Value\r\n\r\n    uint256 totalSupply_;\r\n    address ownerCon;\r\n    using SafeMath for uint256;\r\n\r\n\r\n   constructor(uint256 total) public {  // special function , only called at time of deployemnet\r\n\ttotalSupply_ = total ;\r\n\tbalances[msg.sender] = totalSupply_ ;  // To Deposit all the newly generated tokens in owner's account\r\n\townerCon = msg.sender;\r\n    }  \r\n\r\n    function totalSupply() public view returns (uint256) {\r\n\treturn totalSupply_;\r\n    }\r\n    // getter function\r\n\r\n    function balanceOf(address inputAddress) public view returns (uint) {\r\n        return balances[inputAddress] ;\r\n    }\r\n    // getter function \r\n    \r\n    function transfer(address receiver, uint numTokens)  public returns (bool) {\r\n        require(numTokens <= balances[msg.sender],\"You Don't Have Sufficient Balance\");\r\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\r\n        balances[receiver] = balances[receiver].add(numTokens);\r\n        emit Transfer(msg.sender, receiver, numTokens); // logging these values using events\r\n        return true;\r\n    }\r\n\r\n\r\n    function approve(address approved_addr, uint numTokens) public returns (bool) {\r\n        allowed[msg.sender][approved_addr] = numTokens;\r\n        emit Approval(msg.sender, approved_addr, numTokens);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address owner, address token_manger) public view returns (uint) {\r\n        return allowed[owner][token_manger];\r\n    }// what allowance has been provided by token_owner to Token_manager\r\n\r\n\r\n\r\n    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r\n        require(numTokens <= balances[owner]);    \r\n        require(numTokens <= allowed[owner][msg.sender]);\r\n\r\n        balances[owner] = balances[owner].sub(numTokens);\r\n        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\r\n        balances[buyer] = balances[buyer].add(numTokens);\r\n        emit Transfer(owner, buyer, numTokens);\r\n        return true;\r\n    }\r\n\r\n    // --------------------------------------------------------------------------------------------//\r\n\r\n    // 1\r\n\r\n    function selfDestruct() public onlyOwner {\r\n        address payable owner = msg.sender;\r\n        selfdestruct(owner);\r\n    }\r\n\r\n\r\n    // 2\r\n\r\n\r\n    function incrementSupply(uint256 amount) public onlyOwner {\r\n        totalSupply_ += amount;\r\n        balances[msg.sender] = totalSupply_;  // increment rather than updating\r\n    }\r\n\r\n    // 3\r\n\r\n    function burnSupply(uint256 amount) public onlyOwner  {\r\n        totalSupply_ -= amount;\r\n        balances[msg.sender] = totalSupply_; // decrement rather than updating\r\n    }\r\n\r\n    // 4 \r\n    mapping(address => uint256)  whiteList;\r\n    uint256 whiteListCount = 0 ;\r\n\r\n    function addAddress(address adr) public   {\r\n        if(whiteList[adr] == 0){\r\n             whiteList[adr] = 1;\r\n             whiteListCount += 1;\r\n        }else{\r\n            // logs to console that address is already present\r\n\r\n       \r\n        }\r\n    }\r\n\r\n\r\n    // modifier checkWhiteList()\r\n    // UPDATED Transfer function\r\n\r\n    function transferWhiteList(address receiver, uint numTokens)  public returns (bool) {\r\n        require(whiteList[receiver]==1,\"reciver not present in whitelist\");\r\n        require(numTokens <= balances[msg.sender],\"You Don't Have Sufficient Balance\");\r\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\r\n        balances[receiver] = balances[receiver].add(numTokens);\r\n        emit Transfer(msg.sender, receiver, numTokens); // logging these values using events\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Tutorial1/tutorial2.sol": {
				"IntelliContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "addAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token_manger",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "approved_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "inputAddress",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnSupply",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "incrementSupply",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "selfDestruct",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "transferWhiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Tutorial1/tutorial2.sol\":355:4856  contract IntelliContract {\r... */\n  mstore(0x40, 0x80)\n    /* \"Tutorial1/tutorial2.sol\":3999:4000  0 */\n  0x00\n    /* \"Tutorial1/tutorial2.sol\":3974:4000  uint256 whiteListCount = 0 */\n  0x05\n  sstore\n    /* \"Tutorial1/tutorial2.sol\":1361:1616  constructor(uint256 total) public {  // special function , only called at time of deployemnet\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Tutorial1/tutorial2.sol\":1361:1616  constructor(uint256 total) public {  // special function , only called at time of deployemnet\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"Tutorial1/tutorial2.sol\":1361:1616  constructor(uint256 total) public {  // special function , only called at time of deployemnet\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Tutorial1/tutorial2.sol\":1472:1477  total */\n  dup1\n    /* \"Tutorial1/tutorial2.sol\":1457:1469  totalSupply_ */\n  0x02\n    /* \"Tutorial1/tutorial2.sol\":1457:1477  totalSupply_ = total */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tutorial1/tutorial2.sol\":1505:1517  totalSupply_ */\n  sload(0x02)\n    /* \"Tutorial1/tutorial2.sol\":1482:1490  balances */\n  0x00\n    /* \"Tutorial1/tutorial2.sol\":1482:1502  balances[msg.sender] */\n  dup1\n    /* \"Tutorial1/tutorial2.sol\":1491:1501  msg.sender */\n  caller\n    /* \"Tutorial1/tutorial2.sol\":1482:1502  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Tutorial1/tutorial2.sol\":1482:1517  balances[msg.sender] = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tutorial1/tutorial2.sol\":1598:1608  msg.sender */\n  caller\n    /* \"Tutorial1/tutorial2.sol\":1587:1595  ownerCon */\n  0x03\n  0x00\n    /* \"Tutorial1/tutorial2.sol\":1587:1608  ownerCon = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Tutorial1/tutorial2.sol\":1361:1616  constructor(uint256 total) public {  // special function , only called at time of deployemnet\r... */\n  pop\n    /* \"Tutorial1/tutorial2.sol\":355:4856  contract IntelliContract {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tutorial1/tutorial2.sol\":355:4856  contract IntelliContract {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Tutorial1/tutorial2.sol\":355:4856  contract IntelliContract {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcbbd8a04\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd595c331\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9cb8a26a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x38eada1c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c0246c9\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Tutorial1/tutorial2.sol\":389:432  string public constant name = \"IntelliCoin\" */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_22:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_22)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Tutorial1/tutorial2.sol\":389:432  string public constant name = \"IntelliCoin\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_25:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":2328:2555  function approve(address approved_addr, uint numTokens) public returns (bool) {\r... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"Tutorial1/tutorial2.sol\":2328:2555  function approve(address approved_addr, uint numTokens) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":1626:1710  function totalSupply() public view returns (uint256) {\r... */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":2781:3262  function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"Tutorial1/tutorial2.sol\":2781:3262  function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":634:669  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":4010:4265  function addAddress(address adr) public   {\r... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"Tutorial1/tutorial2.sol\":4010:4265  function addAddress(address adr) public   {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Tutorial1/tutorial2.sol\":4345:4853  function transferWhiteList(address receiver, uint numTokens)  public returns (bool) {\r... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"Tutorial1/tutorial2.sol\":4345:4853  function transferWhiteList(address receiver, uint numTokens)  public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":1742:1859  function balanceOf(address inputAddress) public view returns (uint) {\r... */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"Tutorial1/tutorial2.sol\":1742:1859  function balanceOf(address inputAddress) public view returns (uint) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":512:549  string public constant symbol = \"ITC\" */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_47:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_47)\n    tag_49:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Tutorial1/tutorial2.sol\":512:549  string public constant symbol = \"ITC\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_50:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":3387:3511  function selfDestruct() public onlyOwner {\r... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Tutorial1/tutorial2.sol\":1896:2318  function transfer(address receiver, uint numTokens)  public returns (bool) {\r... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"Tutorial1/tutorial2.sol\":1896:2318  function transfer(address receiver, uint numTokens)  public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":3535:3715  function incrementSupply(uint256 amount) public onlyOwner {\r... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"Tutorial1/tutorial2.sol\":3535:3715  function incrementSupply(uint256 amount) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Tutorial1/tutorial2.sol\":3735:3910  function burnSupply(uint256 amount) public onlyOwner  {\r... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"Tutorial1/tutorial2.sol\":3735:3910  function burnSupply(uint256 amount) public onlyOwner  {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Tutorial1/tutorial2.sol\":2565:2702  function allowance(address owner, address token_manger) public view returns (uint) {\r... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"Tutorial1/tutorial2.sol\":2565:2702  function allowance(address owner, address token_manger) public view returns (uint) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tutorial1/tutorial2.sol\":389:432  string public constant name = \"IntelliCoin\" */\n    tag_21:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x496e74656c6c69436f696e000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":2328:2555  function approve(address approved_addr, uint numTokens) public returns (bool) {\r... */\n    tag_28:\n        /* \"Tutorial1/tutorial2.sol\":2400:2404  bool */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2454:2463  numTokens */\n      dup2\n        /* \"Tutorial1/tutorial2.sol\":2417:2424  allowed */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":2417:2436  allowed[msg.sender] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2425:2435  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2417:2436  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2417:2451  allowed[msg.sender][approved_addr] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2437:2450  approved_addr */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":2417:2451  allowed[msg.sender][approved_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2417:2463  allowed[msg.sender][approved_addr] = numTokens */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2488:2498  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2479:2525  Approval(msg.sender, approved_addr, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Tutorial1/tutorial2.sol\":2500:2513  approved_addr */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":2515:2524  numTokens */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":2479:2525  Approval(msg.sender, approved_addr, numTokens) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tutorial1/tutorial2.sol\":2543:2547  true */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":2536:2547  return true */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2328:2555  function approve(address approved_addr, uint numTokens) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":1626:1710  function totalSupply() public view returns (uint256) {\r... */\n    tag_30:\n        /* \"Tutorial1/tutorial2.sol\":1670:1677  uint256 */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":1690:1702  totalSupply_ */\n      sload(0x02)\n        /* \"Tutorial1/tutorial2.sol\":1683:1702  return totalSupply_ */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":1626:1710  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":2781:3262  function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r... */\n    tag_33:\n        /* \"Tutorial1/tutorial2.sol\":2865:2869  bool */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2903:2911  balances */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2903:2918  balances[owner] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2912:2917  owner */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":2903:2918  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":2890:2899  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":2890:2918  numTokens <= balances[owner] */\n      gt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":2882:2919  require(numTokens <= balances[owner]) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"Tutorial1/tutorial2.sol\":2955:2962  allowed */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":2955:2969  allowed[owner] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2963:2968  owner */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":2955:2969  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2955:2981  allowed[owner][msg.sender] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2970:2980  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2955:2981  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":2942:2951  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":2942:2981  numTokens <= allowed[owner][msg.sender] */\n      gt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":2934:2982  require(numTokens <= allowed[owner][msg.sender]) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"Tutorial1/tutorial2.sol\":3013:3043  balances[owner].sub(numTokens) */\n      tag_70\n        /* \"Tutorial1/tutorial2.sol\":3033:3042  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":3013:3021  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3013:3028  balances[owner] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3022:3027  owner */\n      dup8\n        /* \"Tutorial1/tutorial2.sol\":3013:3028  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":3013:3032  balances[owner].sub */\n      tag_71\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":3013:3043  balances[owner].sub(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Tutorial1/tutorial2.sol\":2995:3003  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2995:3010  balances[owner] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3004:3009  owner */\n      dup7\n        /* \"Tutorial1/tutorial2.sol\":2995:3010  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2995:3043  balances[owner] = balances[owner].sub(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3083:3124  allowed[owner][msg.sender].sub(numTokens) */\n      tag_72\n        /* \"Tutorial1/tutorial2.sol\":3114:3123  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":3083:3090  allowed */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":3083:3097  allowed[owner] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3091:3096  owner */\n      dup8\n        /* \"Tutorial1/tutorial2.sol\":3083:3097  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3083:3109  allowed[owner][msg.sender] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3098:3108  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":3083:3109  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":3083:3113  allowed[owner][msg.sender].sub */\n      tag_71\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":3083:3124  allowed[owner][msg.sender].sub(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Tutorial1/tutorial2.sol\":3054:3061  allowed */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":3054:3068  allowed[owner] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3062:3067  owner */\n      dup7\n        /* \"Tutorial1/tutorial2.sol\":3054:3068  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3054:3080  allowed[owner][msg.sender] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3069:3079  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":3054:3080  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3054:3124  allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3153:3183  balances[buyer].add(numTokens) */\n      tag_73\n        /* \"Tutorial1/tutorial2.sol\":3173:3182  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":3153:3161  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3153:3168  balances[buyer] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3162:3167  buyer */\n      dup7\n        /* \"Tutorial1/tutorial2.sol\":3153:3168  balances[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":3153:3172  balances[buyer].add */\n      tag_74\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":3153:3183  balances[buyer].add(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"Tutorial1/tutorial2.sol\":3135:3143  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3135:3150  balances[buyer] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3144:3149  buyer */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":3135:3150  balances[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3135:3183  balances[buyer] = balances[buyer].add(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3215:3220  buyer */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":3199:3232  Transfer(owner, buyer, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":3208:3213  owner */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":3199:3232  Transfer(owner, buyer, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tutorial1/tutorial2.sol\":3222:3231  numTokens */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":3199:3232  Transfer(owner, buyer, numTokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tutorial1/tutorial2.sol\":3250:3254  true */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":3243:3254  return true */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2781:3262  function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":634:669  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"Tutorial1/tutorial2.sol\":667:669  18 */\n      0x12\n        /* \"Tutorial1/tutorial2.sol\":634:669  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":4010:4265  function addAddress(address adr) public   {\r... */\n    tag_38:\n        /* \"Tutorial1/tutorial2.sol\":4084:4085  0 */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4066:4075  whiteList */\n      0x04\n        /* \"Tutorial1/tutorial2.sol\":4066:4080  whiteList[adr] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4076:4079  adr */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":4066:4080  whiteList[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":4066:4085  whiteList[adr] == 0 */\n      eq\n        /* \"Tutorial1/tutorial2.sol\":4063:4258  if(whiteList[adr] == 0){\r... */\n      iszero\n      tag_76\n      jumpi\n        /* \"Tutorial1/tutorial2.sol\":4119:4120  1 */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":4102:4111  whiteList */\n      0x04\n        /* \"Tutorial1/tutorial2.sol\":4102:4116  whiteList[adr] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4112:4115  adr */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":4102:4116  whiteList[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":4102:4120  whiteList[adr] = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":4154:4155  1 */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":4136:4150  whiteListCount */\n      0x05\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4136:4155  whiteListCount += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":4063:4258  if(whiteList[adr] == 0){\r... */\n      jump(tag_77)\n    tag_76:\n    tag_77:\n        /* \"Tutorial1/tutorial2.sol\":4010:4265  function addAddress(address adr) public   {\r... */\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":4345:4853  function transferWhiteList(address receiver, uint numTokens)  public returns (bool) {\r... */\n    tag_41:\n        /* \"Tutorial1/tutorial2.sol\":4423:4427  bool */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4469:4470  1 */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":4448:4457  whiteList */\n      0x04\n        /* \"Tutorial1/tutorial2.sol\":4448:4467  whiteList[receiver] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4458:4466  receiver */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":4448:4467  whiteList[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":4448:4470  whiteList[receiver]==1 */\n      eq\n        /* \"Tutorial1/tutorial2.sol\":4440:4506  require(whiteList[receiver]==1,\"reciver not present in whitelist\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x72656369766572206e6f742070726573656e7420696e2077686974656c697374\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"Tutorial1/tutorial2.sol\":4538:4546  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4538:4558  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":4547:4557  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":4538:4558  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":4525:4534  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":4525:4558  numTokens <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":4517:4595  require(numTokens <= balances[msg.sender],\"You Don't Have Sufficient Balance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"Tutorial1/tutorial2.sol\":4629:4664  balances[msg.sender].sub(numTokens) */\n      tag_81\n        /* \"Tutorial1/tutorial2.sol\":4654:4663  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":4629:4637  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4629:4649  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":4638:4648  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":4629:4649  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":4629:4653  balances[msg.sender].sub */\n      tag_71\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":4629:4664  balances[msg.sender].sub(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"Tutorial1/tutorial2.sol\":4606:4614  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4606:4626  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":4615:4625  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":4606:4626  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":4606:4664  balances[msg.sender] = balances[msg.sender].sub(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":4696:4729  balances[receiver].add(numTokens) */\n      tag_82\n        /* \"Tutorial1/tutorial2.sol\":4719:4728  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":4696:4704  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4696:4714  balances[receiver] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":4705:4713  receiver */\n      dup7\n        /* \"Tutorial1/tutorial2.sol\":4696:4714  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":4696:4718  balances[receiver].add */\n      tag_74\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":4696:4729  balances[receiver].add(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"Tutorial1/tutorial2.sol\":4675:4683  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":4675:4693  balances[receiver] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":4684:4692  receiver */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":4675:4693  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":4675:4729  balances[receiver] = balances[receiver].add(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":4766:4774  receiver */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":4745:4786  Transfer(msg.sender, receiver, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":4754:4764  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":4745:4786  Transfer(msg.sender, receiver, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tutorial1/tutorial2.sol\":4776:4785  numTokens */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":4745:4786  Transfer(msg.sender, receiver, numTokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tutorial1/tutorial2.sol\":4841:4845  true */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":4834:4845  return true */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":4345:4853  function transferWhiteList(address receiver, uint numTokens)  public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":1742:1859  function balanceOf(address inputAddress) public view returns (uint) {\r... */\n    tag_44:\n        /* \"Tutorial1/tutorial2.sol\":1804:1808  uint */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":1828:1836  balances */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":1828:1850  balances[inputAddress] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":1837:1849  inputAddress */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":1828:1850  balances[inputAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":1821:1850  return balances[inputAddress] */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":1742:1859  function balanceOf(address inputAddress) public view returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":512:549  string public constant symbol = \"ITC\" */\n    tag_46:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4954430000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":3387:3511  function selfDestruct() public onlyOwner {\r... */\n    tag_52:\n        /* \"Tutorial1/tutorial2.sol\":1061:1069  ownerCon */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1057  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tutorial1/tutorial2.sol\":1038:1070  require (msg.sender == ownerCon) */\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n        /* \"Tutorial1/tutorial2.sol\":3439:3460  address payable owner */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3463:3473  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":3439:3473  address payable owner = msg.sender */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3497:3502  owner */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3484:3503  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"Tutorial1/tutorial2.sol\":1896:2318  function transfer(address receiver, uint numTokens)  public returns (bool) {\r... */\n    tag_55:\n        /* \"Tutorial1/tutorial2.sol\":1965:1969  bool */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2003:2011  balances */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2003:2023  balances[msg.sender] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2012:2022  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2003:2023  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":1990:1999  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":1990:2023  numTokens <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":1982:2060  require(numTokens <= balances[msg.sender],\"You Don't Have Sufficient Balance\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Tutorial1/tutorial2.sol\":2094:2129  balances[msg.sender].sub(numTokens) */\n      tag_89\n        /* \"Tutorial1/tutorial2.sol\":2119:2128  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":2094:2102  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2094:2114  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2103:2113  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2094:2114  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":2094:2118  balances[msg.sender].sub */\n      tag_71\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":2094:2129  balances[msg.sender].sub(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"Tutorial1/tutorial2.sol\":2071:2079  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2071:2091  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2080:2090  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2071:2091  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2071:2129  balances[msg.sender] = balances[msg.sender].sub(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2161:2194  balances[receiver].add(numTokens) */\n      tag_90\n        /* \"Tutorial1/tutorial2.sol\":2184:2193  numTokens */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":2161:2169  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2161:2179  balances[receiver] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2170:2178  receiver */\n      dup7\n        /* \"Tutorial1/tutorial2.sol\":2161:2179  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":2161:2183  balances[receiver].add */\n      tag_74\n      swap1\n        /* \"Tutorial1/tutorial2.sol\":2161:2194  balances[receiver].add(numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"Tutorial1/tutorial2.sol\":2140:2148  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2140:2158  balances[receiver] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":2149:2157  receiver */\n      dup6\n        /* \"Tutorial1/tutorial2.sol\":2140:2158  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2140:2194  balances[receiver] = balances[receiver].add(numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2231:2239  receiver */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":2210:2251  Transfer(msg.sender, receiver, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":2219:2229  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":2210:2251  Transfer(msg.sender, receiver, numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tutorial1/tutorial2.sol\":2241:2250  numTokens */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":2210:2251  Transfer(msg.sender, receiver, numTokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tutorial1/tutorial2.sol\":2306:2310  true */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":2299:2310  return true */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":1896:2318  function transfer(address receiver, uint numTokens)  public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":3535:3715  function incrementSupply(uint256 amount) public onlyOwner {\r... */\n    tag_58:\n        /* \"Tutorial1/tutorial2.sol\":1061:1069  ownerCon */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1057  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tutorial1/tutorial2.sol\":1038:1070  require (msg.sender == ownerCon) */\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n        /* \"Tutorial1/tutorial2.sol\":3620:3626  amount */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3604:3616  totalSupply_ */\n      0x02\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3604:3626  totalSupply_ += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3660:3672  totalSupply_ */\n      sload(0x02)\n        /* \"Tutorial1/tutorial2.sol\":3637:3645  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3637:3657  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3646:3656  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":3637:3657  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3637:3672  balances[msg.sender] = totalSupply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3535:3715  function incrementSupply(uint256 amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":3735:3910  function burnSupply(uint256 amount) public onlyOwner  {\r... */\n    tag_61:\n        /* \"Tutorial1/tutorial2.sol\":1061:1069  ownerCon */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tutorial1/tutorial2.sol\":1047:1057  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":1047:1069  msg.sender == ownerCon */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tutorial1/tutorial2.sol\":1038:1070  require (msg.sender == ownerCon) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n        /* \"Tutorial1/tutorial2.sol\":3816:3822  amount */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3800:3812  totalSupply_ */\n      0x02\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3800:3822  totalSupply_ -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3856:3868  totalSupply_ */\n      sload(0x02)\n        /* \"Tutorial1/tutorial2.sol\":3833:3841  balances */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":3833:3853  balances[msg.sender] */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":3842:3852  msg.sender */\n      caller\n        /* \"Tutorial1/tutorial2.sol\":3833:3853  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":3833:3868  balances[msg.sender] = totalSupply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tutorial1/tutorial2.sol\":3735:3910  function burnSupply(uint256 amount) public onlyOwner  {\r... */\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":2565:2702  function allowance(address owner, address token_manger) public view returns (uint) {\r... */\n    tag_64:\n        /* \"Tutorial1/tutorial2.sol\":2642:2646  uint */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2666:2673  allowed */\n      0x01\n        /* \"Tutorial1/tutorial2.sol\":2666:2680  allowed[owner] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2674:2679  owner */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":2666:2680  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tutorial1/tutorial2.sol\":2666:2694  allowed[owner][token_manger] */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":2681:2693  token_manger */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":2666:2694  allowed[owner][token_manger] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tutorial1/tutorial2.sol\":2659:2694  return allowed[owner][token_manger] */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":2565:2702  function allowance(address owner, address token_manger) public view returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":52:198  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_71:\n        /* \"Tutorial1/tutorial2.sol\":110:117  uint256 */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":140:141  a */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":135:136  b */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":135:141  b <= a */\n      gt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":128:142  assert(b <= a) */\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n        /* \"Tutorial1/tutorial2.sol\":189:190  b */\n      dup2\n        /* \"Tutorial1/tutorial2.sol\":185:186  a */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":185:190  a - b */\n      sub\n        /* \"Tutorial1/tutorial2.sol\":178:190  return a - b */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":52:198  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tutorial1/tutorial2.sol\":206:347  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_74:\n        /* \"Tutorial1/tutorial2.sol\":264:271  uint256 */\n      0x00\n        /* \"Tutorial1/tutorial2.sol\":282:291  uint256 c */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":298:299  b */\n      dup3\n        /* \"Tutorial1/tutorial2.sol\":294:295  a */\n      dup5\n        /* \"Tutorial1/tutorial2.sol\":294:299  a + b */\n      add\n        /* \"Tutorial1/tutorial2.sol\":282:299  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Tutorial1/tutorial2.sol\":320:321  a */\n      dup4\n        /* \"Tutorial1/tutorial2.sol\":315:316  c */\n      dup2\n        /* \"Tutorial1/tutorial2.sol\":315:321  c >= a */\n      lt\n      iszero\n        /* \"Tutorial1/tutorial2.sol\":308:322  assert(c >= a) */\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n        /* \"Tutorial1/tutorial2.sol\":338:339  c */\n      dup1\n        /* \"Tutorial1/tutorial2.sol\":331:339  return c */\n      swap2\n      pop\n      pop\n        /* \"Tutorial1/tutorial2.sol\":206:347  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4 596f7520446f6e277420486176652053756666696369656e742042616c616e6365\n\n    auxdata: 0xa265627a7a723158206459727d935ca357f8c565a97d254a196ef3d1e7e9c73dedc1f2e946e693bdf064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060055534801561001557600080fd5b506040516114463803806114468339818101604052602081101561003857600080fd5b8101908080519060200190929190505050806002819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050611360806100e66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb1461042f578063cbbd8a0414610495578063d595c331146104c3578063dd62ed3e146104f1576100ea565b806370a082311461034a57806395d89b41146103a25780639cb8a26a14610425576100ea565b806323b872dd116100c857806323b872dd146101f6578063313ce5671461027c57806338eada1c146102a05780635c0246c9146102e4576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f7610569565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a2565b604051808215151515815260200191505060405180910390f35b6101e06106b1565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106bb565b604051808215151515815260200191505060405180910390f35b610284610a36565b604051808260ff1660ff16815260200191505060405180910390f35b6102e2600480360360208110156102b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a3b565b005b610330600480360360408110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae2565b604051808215151515815260200191505060405180910390f35b61038c6004803603602081101561036057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dc5565b6040518082815260200191505060405180910390f35b6103aa610e0d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ea5780820151818401526020810190506103cf565b50505050905090810190601f1680156104175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61042d610e46565b005b61047b6004803603604081101561044557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ebe565b604051808215151515815260200191505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b81019080803590602001909291905050506110ec565b005b6104ef600480360360208110156104d957600080fd5b810190808035906020019092919050505061119e565b005b6105536004803603604081101561050757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611250565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f496e74656c6c69436f696e00000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a26001905092915050565b6000600254905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561070857600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561079157600080fd5b6107e2826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108b382600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610984826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b601281565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610ade576001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600560008282540192505081905550610adf565b5b50565b60006001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f72656369766572206e6f742070726573656e7420696e2077686974656c69737481525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610c30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061130b6021913960400191505060405180910390fd5b610c81826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d14826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600381526020017f495443000000000000000000000000000000000000000000000000000000000081525081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ea057600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061130b6021913960400191505060405180910390fd5b610fa8826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061103b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461114657600080fd5b806002600082825401925050819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f857600080fd5b806002600082825403925050819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211156112e357fe5b818303905092915050565b60008082840190508381101561130057fe5b809150509291505056fe596f7520446f6e277420486176652053756666696369656e742042616c616e6365a265627a7a723158206459727d935ca357f8c565a97d254a196ef3d1e7e9c73dedc1f2e946e693bdf064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1446 CODESIZE SUB DUP1 PUSH2 0x1446 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1360 DUP1 PUSH2 0xE6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xCBBD8A04 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xD595C331 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x9CB8A26A EQ PUSH2 0x425 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x38EADA1C EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x5C0246C9 EQ PUSH2 0x2E4 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x137 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3EA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH2 0xE46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x119E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E74656C6C69436F696E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E2 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8B3 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x984 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xADF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x72656369766572206E6F742070726573656E7420696E2077686974656C697374 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC81 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD14 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4954430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA8 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x103B DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x12E3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1300 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID MSIZE PUSH16 0x7520446F6E2774204861766520537566 PUSH7 0x696369656E7420 TIMESTAMP PUSH2 0x6C61 PUSH15 0x6365A265627A7A723158206459727D SWAP4 0x5C LOG3 JUMPI 0xF8 0xC5 PUSH6 0xA97D254A196E RETURN 0xD1 0xE7 0xE9 0xC7 RETURNDATASIZE 0xED 0xC1 CALLCODE 0xE9 CHAINID 0xE6 SWAP4 0xBD CREATE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "355:4501:0:-;;;3999:1;3974:26;;1361:255;8:9:-1;5:2;;;30:1;27;20:12;5:2;1361:255:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1361:255:0;;;;;;;;;;;;;;;;1472:5;1457:12;:20;;;;1505:12;;1482:8;:20;1491:10;1482:20;;;;;;;;;;;;;;;:35;;;;1598:10;1587:8;;:21;;;;;;;;;;;;;;;;;;1361:255;355:4501;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb1461042f578063cbbd8a0414610495578063d595c331146104c3578063dd62ed3e146104f1576100ea565b806370a082311461034a57806395d89b41146103a25780639cb8a26a14610425576100ea565b806323b872dd116100c857806323b872dd146101f6578063313ce5671461027c57806338eada1c146102a05780635c0246c9146102e4576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f7610569565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a2565b604051808215151515815260200191505060405180910390f35b6101e06106b1565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106bb565b604051808215151515815260200191505060405180910390f35b610284610a36565b604051808260ff1660ff16815260200191505060405180910390f35b6102e2600480360360208110156102b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a3b565b005b610330600480360360408110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae2565b604051808215151515815260200191505060405180910390f35b61038c6004803603602081101561036057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dc5565b6040518082815260200191505060405180910390f35b6103aa610e0d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ea5780820151818401526020810190506103cf565b50505050905090810190601f1680156104175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61042d610e46565b005b61047b6004803603604081101561044557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ebe565b604051808215151515815260200191505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b81019080803590602001909291905050506110ec565b005b6104ef600480360360208110156104d957600080fd5b810190808035906020019092919050505061119e565b005b6105536004803603604081101561050757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611250565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f496e74656c6c69436f696e00000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a26001905092915050565b6000600254905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561070857600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561079157600080fd5b6107e2826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108b382600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610984826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b601281565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610ade576001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600560008282540192505081905550610adf565b5b50565b60006001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f72656369766572206e6f742070726573656e7420696e2077686974656c69737481525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610c30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061130b6021913960400191505060405180910390fd5b610c81826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d14826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600381526020017f495443000000000000000000000000000000000000000000000000000000000081525081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ea057600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061130b6021913960400191505060405180910390fd5b610fa8826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061103b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112ee90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461114657600080fd5b806002600082825401925050819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f857600080fd5b806002600082825403925050819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211156112e357fe5b818303905092915050565b60008082840190508381101561130057fe5b809150509291505056fe596f7520446f6e277420486176652053756666696369656e742042616c616e6365a265627a7a723158206459727d935ca357f8c565a97d254a196ef3d1e7e9c73dedc1f2e946e693bdf064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xCBBD8A04 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xD595C331 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x9CB8A26A EQ PUSH2 0x425 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x38EADA1C EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x5C0246C9 EQ PUSH2 0x2E4 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x137 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3EA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH2 0xE46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x119E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E74656C6C69436F696E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E2 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8B3 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x984 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xADF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x72656369766572206E6F742070726573656E7420696E2077686974656C697374 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC81 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD14 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4954430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA8 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x103B DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x12E3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1300 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID MSIZE PUSH16 0x7520446F6E2774204861766520537566 PUSH7 0x696369656E7420 TIMESTAMP PUSH2 0x6C61 PUSH15 0x6365A265627A7A723158206459727D SWAP4 0x5C LOG3 JUMPI 0xF8 0xC5 PUSH6 0xA97D254A196E RETURN 0xD1 0xE7 0xE9 0xC7 RETURNDATASIZE 0xED 0xC1 CALLCODE 0xE9 CHAINID 0xE6 SWAP4 0xBD CREATE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "355:4501:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:4501:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;389:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2328:227;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2328:227:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1626:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2781:481;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2781:481:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;634:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4010:255;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4010:255:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;4345:508;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4345:508:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1742:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1742:117:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;512:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;512:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3387:124;;;:::i;:::-;;1896:422;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1896:422:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3535:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3535:180:0;;;;;;;;;;;;;;;;;:::i;:::-;;3735:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3735:175:0;;;;;;;;;;;;;;;;;:::i;:::-;;2565:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2565:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;389:43;;;;;;;;;;;;;;;;;;;:::o;2328:227::-;2400:4;2454:9;2417:7;:19;2425:10;2417:19;;;;;;;;;;;;;;;:34;2437:13;2417:34;;;;;;;;;;;;;;;:46;;;;2488:10;2479:46;;;2500:13;2515:9;2479:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:4;2536:11;;2328:227;;;;:::o;1626:84::-;1670:7;1690:12;;1683:19;;1626:84;:::o;2781:481::-;2865:4;2903:8;:15;2912:5;2903:15;;;;;;;;;;;;;;;;2890:9;:28;;2882:37;;;;;;2955:7;:14;2963:5;2955:14;;;;;;;;;;;;;;;:26;2970:10;2955:26;;;;;;;;;;;;;;;;2942:9;:39;;2934:48;;;;;;3013:30;3033:9;3013:8;:15;3022:5;3013:15;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;2995:8;:15;3004:5;2995:15;;;;;;;;;;;;;;;:48;;;;3083:41;3114:9;3083:7;:14;3091:5;3083:14;;;;;;;;;;;;;;;:26;3098:10;3083:26;;;;;;;;;;;;;;;;:30;;:41;;;;:::i;:::-;3054:7;:14;3062:5;3054:14;;;;;;;;;;;;;;;:26;3069:10;3054:26;;;;;;;;;;;;;;;:70;;;;3153:30;3173:9;3153:8;:15;3162:5;3153:15;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;3135:8;:15;3144:5;3135:15;;;;;;;;;;;;;;;:48;;;;3215:5;3199:33;;3208:5;3199:33;;;3222:9;3199:33;;;;;;;;;;;;;;;;;;3250:4;3243:11;;2781:481;;;;;:::o;634:35::-;667:2;634:35;:::o;4010:255::-;4084:1;4066:9;:14;4076:3;4066:14;;;;;;;;;;;;;;;;:19;4063:195;;;4119:1;4102:9;:14;4112:3;4102:14;;;;;;;;;;;;;;;:18;;;;4154:1;4136:14;;:19;;;;;;;;;;;4063:195;;;;4010:255;:::o;4345:508::-;4423:4;4469:1;4448:9;:19;4458:8;4448:19;;;;;;;;;;;;;;;;:22;4440:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4538:8;:20;4547:10;4538:20;;;;;;;;;;;;;;;;4525:9;:33;;4517:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4629:35;4654:9;4629:8;:20;4638:10;4629:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;4606:8;:20;4615:10;4606:20;;;;;;;;;;;;;;;:58;;;;4696:33;4719:9;4696:8;:18;4705:8;4696:18;;;;;;;;;;;;;;;;:22;;:33;;;;:::i;:::-;4675:8;:18;4684:8;4675:18;;;;;;;;;;;;;;;:54;;;;4766:8;4745:41;;4754:10;4745:41;;;4776:9;4745:41;;;;;;;;;;;;;;;;;;4841:4;4834:11;;4345:508;;;;:::o;1742:117::-;1804:4;1828:8;:22;1837:12;1828:22;;;;;;;;;;;;;;;;1821:29;;1742:117;;;:::o;512:37::-;;;;;;;;;;;;;;;;;;;:::o;3387:124::-;1061:8;;;;;;;;;;;1047:22;;:10;:22;;;1038:32;;;;;;3439:21;3463:10;3439:34;;3497:5;3484:19;;;1896:422;1965:4;2003:8;:20;2012:10;2003:20;;;;;;;;;;;;;;;;1990:9;:33;;1982:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:35;2119:9;2094:8;:20;2103:10;2094:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;2071:8;:20;2080:10;2071:20;;;;;;;;;;;;;;;:58;;;;2161:33;2184:9;2161:8;:18;2170:8;2161:18;;;;;;;;;;;;;;;;:22;;:33;;;;:::i;:::-;2140:8;:18;2149:8;2140:18;;;;;;;;;;;;;;;:54;;;;2231:8;2210:41;;2219:10;2210:41;;;2241:9;2210:41;;;;;;;;;;;;;;;;;;2306:4;2299:11;;1896:422;;;;:::o;3535:180::-;1061:8;;;;;;;;;;;1047:22;;:10;:22;;;1038:32;;;;;;3620:6;3604:12;;:22;;;;;;;;;;;3660:12;;3637:8;:20;3646:10;3637:20;;;;;;;;;;;;;;;:35;;;;3535:180;:::o;3735:175::-;1061:8;;;;;;;;;;;1047:22;;:10;:22;;;1038:32;;;;;;3816:6;3800:12;;:22;;;;;;;;;;;3856:12;;3833:8;:20;3842:10;3833:20;;;;;;;;;;;;;;;:35;;;;3735:175;:::o;2565:137::-;2642:4;2666:7;:14;2674:5;2666:14;;;;;;;;;;;;;;;:28;2681:12;2666:28;;;;;;;;;;;;;;;;2659:35;;2565:137;;;;:::o;52:146::-;110:7;140:1;135;:6;;128:14;;;;189:1;185;:5;178:12;;52:146;;;;:::o;206:141::-;264:7;282:9;298:1;294;:5;282:17;;320:1;315;:6;;308:14;;;;338:1;331:8;;;206:141;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "992000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAddress(address)": "42165",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22321",
								"balanceOf(address)": "1219",
								"burnSupply(uint256)": "42900",
								"decimals()": "262",
								"incrementSupply(uint256)": "42878",
								"name()": "infinite",
								"selfDestruct()": "31091",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferWhiteList(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "MSTORE"
								},
								{
									"begin": 3999,
									"end": 4000,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3974,
									"end": 4000,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3974,
									"end": 4000,
									"name": "SSTORE"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "POP"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "MLOAD"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "CODESIZE"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SUB"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP4"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "CODECOPY"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP2"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP2"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "ADD"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP2"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "ADD"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "DUP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "MLOAD"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "ADD"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP3"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP2"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "SWAP1"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "POP"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "POP"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "POP"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP1"
								},
								{
									"begin": 1457,
									"end": 1469,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1457,
									"end": 1477,
									"name": "DUP2"
								},
								{
									"begin": 1457,
									"end": 1477,
									"name": "SWAP1"
								},
								{
									"begin": 1457,
									"end": 1477,
									"name": "SSTORE"
								},
								{
									"begin": 1457,
									"end": 1477,
									"name": "POP"
								},
								{
									"begin": 1505,
									"end": 1517,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1505,
									"end": 1517,
									"name": "SLOAD"
								},
								{
									"begin": 1482,
									"end": 1490,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "DUP1"
								},
								{
									"begin": 1491,
									"end": 1501,
									"name": "CALLER"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "AND"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "AND"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "DUP2"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "MSTORE"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "ADD"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "SWAP1"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "DUP2"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "MSTORE"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "ADD"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "KECCAK256"
								},
								{
									"begin": 1482,
									"end": 1517,
									"name": "DUP2"
								},
								{
									"begin": 1482,
									"end": 1517,
									"name": "SWAP1"
								},
								{
									"begin": 1482,
									"end": 1517,
									"name": "SSTORE"
								},
								{
									"begin": 1482,
									"end": 1517,
									"name": "POP"
								},
								{
									"begin": 1598,
									"end": 1608,
									"name": "CALLER"
								},
								{
									"begin": 1587,
									"end": 1595,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1587,
									"end": 1595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "EXP"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "DUP2"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SLOAD"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "DUP2"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "MUL"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "NOT"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "AND"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP1"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "DUP4"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "AND"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "MUL"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "OR"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP1"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SSTORE"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "POP"
								},
								{
									"begin": 1361,
									"end": 1616,
									"name": "POP"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "DUP1"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "CODECOPY"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 355,
									"end": 4856,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206459727d935ca357f8c565a97d254a196ef3d1e7e9c73dedc1f2e946e693bdf064736f6c63430005110032",
									".code": [
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "LT"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "SHR"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "GT"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "GT"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "CBBD8A04"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "D595C331"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMP"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "9CB8A26A"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMP"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "GT"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "38EADA1C"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "5C0246C9"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMP"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "EQ"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 4856,
											"name": "REVERT"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "EXP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "NOT"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "RETURN"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "JUMPDEST"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP3"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP3"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "JUMPDEST"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "MLOAD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP3"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ISZERO"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ISZERO"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ISZERO"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ISZERO"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "MLOAD"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SUB"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "RETURN"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "JUMPDEST"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "JUMPDEST"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "MLOAD"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "DUP3"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "DUP2"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "ADD"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "SWAP2"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "POP"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "POP"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "MLOAD"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "SWAP2"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "SUB"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "SWAP1"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "RETURN"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "MLOAD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP3"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "MLOAD"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SUB"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "RETURN"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "JUMPDEST"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "JUMPDEST"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "MLOAD"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "DUP1"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "DUP3"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "AND"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "AND"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "DUP2"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "MSTORE"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "ADD"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "SWAP2"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "POP"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "POP"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "MLOAD"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "DUP1"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "SWAP2"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "SUB"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "SWAP1"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "RETURN"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP3"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP2"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "STOP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "AND"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP3"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP3"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP3"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ISZERO"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ISZERO"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ISZERO"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ISZERO"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SUB"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "RETURN"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMPDEST"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "ADD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "AND"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "ADD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP3"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMPDEST"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "MLOAD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP3"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "MSTORE"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "ADD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "MLOAD"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SUB"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "RETURN"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP4"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP4"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "AND"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ISZERO"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP4"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "EXP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "NOT"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "AND"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP3"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "RETURN"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "STOP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ADD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "AND"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ADD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP3"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ADD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP3"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "MLOAD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP3"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ISZERO"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ISZERO"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ISZERO"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ISZERO"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "MSTORE"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "ADD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "MLOAD"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "DUP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SUB"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "RETURN"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "JUMPDEST"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "DUP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "DUP2"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "ADD"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "DUP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "DUP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "ADD"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP3"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP2"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "POP"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "POP"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "POP"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "JUMPDEST"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "STOP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "JUMPDEST"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "DUP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "DUP2"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "ADD"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "DUP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "DUP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "ADD"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP3"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP2"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "JUMPDEST"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "STOP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "JUMPDEST"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "AND"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP3"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "AND"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP3"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "JUMPDEST"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "MLOAD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP3"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "MSTORE"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "MLOAD"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "DUP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SUB"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "RETURN"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "PUSH",
											"value": "496E74656C6C69436F696E000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "JUMPDEST"
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2435,
											"name": "CALLER"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "KECCAK256"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2450,
											"name": "DUP6"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "AND"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "AND"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "MSTORE"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "MSTORE"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2451,
											"name": "KECCAK256"
										},
										{
											"begin": 2417,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2417,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2417,
											"end": 2463,
											"name": "SSTORE"
										},
										{
											"begin": 2417,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "CALLER"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "AND"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2500,
											"end": 2513,
											"name": "DUP5"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP5"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "MLOAD"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP4"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "AND"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "AND"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP3"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "SWAP3"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "POP"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "POP"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "POP"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "MLOAD"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "DUP1"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "SWAP2"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "SUB"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "SWAP1"
										},
										{
											"begin": 2479,
											"end": 2525,
											"name": "LOG2"
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2536,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP3"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2555,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "SLOAD"
										},
										{
											"begin": 1683,
											"end": 1702,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "SWAP1"
										},
										{
											"begin": 1626,
											"end": 1710,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2911,
											"name": "DUP1"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP6"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "AND"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "AND"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "DUP2"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "MSTORE"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "ADD"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "SWAP1"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "DUP2"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "MSTORE"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "ADD"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "KECCAK256"
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "SLOAD"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP3"
										},
										{
											"begin": 2890,
											"end": 2918,
											"name": "GT"
										},
										{
											"begin": 2890,
											"end": 2918,
											"name": "ISZERO"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "JUMPI"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "DUP1"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "REVERT"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2962,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2968,
											"name": "DUP6"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "KECCAK256"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2980,
											"name": "CALLER"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "KECCAK256"
										},
										{
											"begin": 2955,
											"end": 2981,
											"name": "SLOAD"
										},
										{
											"begin": 2942,
											"end": 2951,
											"name": "DUP3"
										},
										{
											"begin": 2942,
											"end": 2981,
											"name": "GT"
										},
										{
											"begin": 2942,
											"end": 2981,
											"name": "ISZERO"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "JUMPI"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "REVERT"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2934,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3"
										},
										{
											"begin": 3013,
											"end": 3021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP1"
										},
										{
											"begin": 3022,
											"end": 3027,
											"name": "DUP8"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP2"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "MSTORE"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "ADD"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SWAP1"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP2"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "MSTORE"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "ADD"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "KECCAK256"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SLOAD"
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "SWAP1"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "SWAP2"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "SWAP1"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "AND"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "JUMPDEST"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "DUP1"
										},
										{
											"begin": 3004,
											"end": 3009,
											"name": "DUP7"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "AND"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "AND"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "SWAP1"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "KECCAK256"
										},
										{
											"begin": 2995,
											"end": 3043,
											"name": "DUP2"
										},
										{
											"begin": 2995,
											"end": 3043,
											"name": "SWAP1"
										},
										{
											"begin": 2995,
											"end": 3043,
											"name": "SSTORE"
										},
										{
											"begin": 2995,
											"end": 3043,
											"name": "POP"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3114,
											"end": 3123,
											"name": "DUP3"
										},
										{
											"begin": 3083,
											"end": 3090,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP8"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "AND"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "AND"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP2"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "MSTORE"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "ADD"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "SWAP1"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP2"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "MSTORE"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "ADD"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "KECCAK256"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "CALLER"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "AND"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "AND"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "DUP2"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "MSTORE"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "ADD"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "SWAP1"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "DUP2"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "MSTORE"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "ADD"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "KECCAK256"
										},
										{
											"begin": 3083,
											"end": 3109,
											"name": "SLOAD"
										},
										{
											"begin": 3083,
											"end": 3113,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3083,
											"end": 3113,
											"name": "SWAP1"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "SWAP2"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "SWAP1"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "AND"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 3083,
											"end": 3124,
											"name": "JUMPDEST"
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3067,
											"name": "DUP7"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "AND"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "AND"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "DUP2"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "SWAP1"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "DUP2"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "KECCAK256"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3079,
											"name": "CALLER"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "AND"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "AND"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "DUP2"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "MSTORE"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "ADD"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "SWAP1"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "DUP2"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "MSTORE"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "ADD"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "KECCAK256"
										},
										{
											"begin": 3054,
											"end": 3124,
											"name": "DUP2"
										},
										{
											"begin": 3054,
											"end": 3124,
											"name": "SWAP1"
										},
										{
											"begin": 3054,
											"end": 3124,
											"name": "SSTORE"
										},
										{
											"begin": 3054,
											"end": 3124,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3173,
											"end": 3182,
											"name": "DUP3"
										},
										{
											"begin": 3153,
											"end": 3161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "DUP1"
										},
										{
											"begin": 3162,
											"end": 3167,
											"name": "DUP7"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "MSTORE"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "MSTORE"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "KECCAK256"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "SLOAD"
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "SWAP2"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "AND"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "DUP1"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP6"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "AND"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "AND"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "KECCAK256"
										},
										{
											"begin": 3135,
											"end": 3183,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3183,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3183,
											"name": "SSTORE"
										},
										{
											"begin": 3135,
											"end": 3183,
											"name": "POP"
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP3"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "AND"
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP5"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "AND"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "DUP5"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "MLOAD"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "DUP1"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "DUP3"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "MSTORE"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "ADD"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SWAP2"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "POP"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "POP"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "MLOAD"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "DUP1"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SWAP2"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SUB"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "LOG3"
										},
										{
											"begin": 3250,
											"end": 3254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP4"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "JUMPDEST"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "DUP2"
										},
										{
											"begin": 634,
											"end": 669,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "JUMPDEST"
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP4"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "AND"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "AND"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "DUP2"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "MSTORE"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "ADD"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "SWAP1"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "DUP2"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "MSTORE"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "ADD"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "KECCAK256"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "SLOAD"
										},
										{
											"begin": 4066,
											"end": 4085,
											"name": "EQ"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "ISZERO"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "JUMPI"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4111,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4115,
											"name": "DUP4"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "AND"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "AND"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "DUP2"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "MSTORE"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "ADD"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "SWAP1"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "DUP2"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "MSTORE"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "ADD"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4116,
											"name": "KECCAK256"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SSTORE"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "POP"
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4136,
											"end": 4150,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4136,
											"end": 4150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "DUP3"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "DUP3"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "SLOAD"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "ADD"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "SWAP3"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "DUP2"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "SWAP1"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "SSTORE"
										},
										{
											"begin": 4136,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "JUMP"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4063,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4010,
											"end": 4265,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "DUP6"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "AND"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "AND"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "DUP2"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "MSTORE"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "ADD"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "SWAP1"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "DUP2"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "MSTORE"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "ADD"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "KECCAK256"
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "SLOAD"
										},
										{
											"begin": 4448,
											"end": 4470,
											"name": "EQ"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "JUMPI"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MLOAD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MSTORE"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "ADD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP1"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP1"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "ADD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP3"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SUB"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP3"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MSTORE"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MSTORE"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "ADD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP1"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "72656369766572206E6F742070726573656E7420696E2077686974656C697374"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MSTORE"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "POP"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "ADD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SWAP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "POP"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "POP"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "MLOAD"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "DUP1"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SWAP2"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SUB"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SWAP1"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "REVERT"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "JUMPDEST"
										},
										{
											"begin": 4538,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "DUP1"
										},
										{
											"begin": 4547,
											"end": 4557,
											"name": "CALLER"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "AND"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "AND"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "DUP2"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "MSTORE"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "ADD"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "SWAP1"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "DUP2"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "MSTORE"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "ADD"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "KECCAK256"
										},
										{
											"begin": 4538,
											"end": 4558,
											"name": "SLOAD"
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "DUP3"
										},
										{
											"begin": 4525,
											"end": 4558,
											"name": "GT"
										},
										{
											"begin": 4525,
											"end": 4558,
											"name": "ISZERO"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "JUMPI"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "MLOAD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "MSTORE"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "ADD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP1"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP1"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "ADD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP3"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SUB"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP3"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "MSTORE"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "MSTORE"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "ADD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP1"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH data",
											"value": "459E0DFB690370A8FB44E20926D960E5E65E9618653142C0DCE84E4511E1DEC4"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SWAP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "CODECOPY"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "ADD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SWAP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "POP"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "POP"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "MLOAD"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "DUP1"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SWAP2"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SUB"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "SWAP1"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "REVERT"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4517,
											"end": 4595,
											"name": "JUMPDEST"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "DUP3"
										},
										{
											"begin": 4629,
											"end": 4637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "DUP1"
										},
										{
											"begin": 4638,
											"end": 4648,
											"name": "CALLER"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4649,
											"name": "SLOAD"
										},
										{
											"begin": 4629,
											"end": 4653,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4629,
											"end": 4653,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 4629,
											"end": 4664,
											"name": "JUMPDEST"
										},
										{
											"begin": 4606,
											"end": 4614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "DUP1"
										},
										{
											"begin": 4615,
											"end": 4625,
											"name": "CALLER"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "AND"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "AND"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "DUP2"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "MSTORE"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "ADD"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "SWAP1"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "DUP2"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "MSTORE"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "ADD"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4626,
											"name": "KECCAK256"
										},
										{
											"begin": 4606,
											"end": 4664,
											"name": "DUP2"
										},
										{
											"begin": 4606,
											"end": 4664,
											"name": "SWAP1"
										},
										{
											"begin": 4606,
											"end": 4664,
											"name": "SSTORE"
										},
										{
											"begin": 4606,
											"end": 4664,
											"name": "POP"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP3"
										},
										{
											"begin": 4696,
											"end": 4704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "DUP1"
										},
										{
											"begin": 4705,
											"end": 4713,
											"name": "DUP7"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "AND"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "AND"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "DUP2"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "MSTORE"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "ADD"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "SWAP1"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "DUP2"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "MSTORE"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "ADD"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "KECCAK256"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "SLOAD"
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "SWAP1"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "SWAP2"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "SWAP1"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "AND"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4696,
											"end": 4729,
											"name": "JUMPDEST"
										},
										{
											"begin": 4675,
											"end": 4683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "DUP1"
										},
										{
											"begin": 4684,
											"end": 4692,
											"name": "DUP6"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "KECCAK256"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "DUP2"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "SSTORE"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "POP"
										},
										{
											"begin": 4766,
											"end": 4774,
											"name": "DUP3"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "AND"
										},
										{
											"begin": 4754,
											"end": 4764,
											"name": "CALLER"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "AND"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "DUP5"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "MLOAD"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "DUP1"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "DUP3"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "DUP2"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "MSTORE"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "ADD"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "SWAP2"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "POP"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "POP"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "MLOAD"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "DUP1"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "SWAP2"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "SUB"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "SWAP1"
										},
										{
											"begin": 4745,
											"end": 4786,
											"name": "LOG3"
										},
										{
											"begin": 4841,
											"end": 4845,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4834,
											"end": 4845,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4845,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP3"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4853,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMPDEST"
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "DUP4"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "DUP2"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "MSTORE"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "DUP2"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "MSTORE"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "KECCAK256"
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "SLOAD"
										},
										{
											"begin": 1821,
											"end": 1850,
											"name": "SWAP1"
										},
										{
											"begin": 1821,
											"end": 1850,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP2"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "PUSH",
											"value": "4954430000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3387,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SLOAD"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "EXP"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "DIV"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "EQ"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPI"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "REVERT"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 3439,
											"end": 3460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3473,
											"name": "CALLER"
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "POP"
										},
										{
											"begin": 3497,
											"end": 3502,
											"name": "DUP1"
										},
										{
											"begin": 3484,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3484,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3484,
											"end": 3503,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1965,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "CALLER"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "AND"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "AND"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "MSTORE"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "ADD"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "SWAP1"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "MSTORE"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "ADD"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "KECCAK256"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "SLOAD"
										},
										{
											"begin": 1990,
											"end": 1999,
											"name": "DUP3"
										},
										{
											"begin": 1990,
											"end": 2023,
											"name": "GT"
										},
										{
											"begin": 1990,
											"end": 2023,
											"name": "ISZERO"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "JUMPI"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "MLOAD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SUB"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH data",
											"value": "459E0DFB690370A8FB44E20926D960E5E65E9618653142C0DCE84E4511E1DEC4"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "CODECOPY"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "POP"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "POP"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "MLOAD"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SUB"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "SWAP1"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "REVERT"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1982,
											"end": 2060,
											"name": "JUMPDEST"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3"
										},
										{
											"begin": 2094,
											"end": 2102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2113,
											"name": "CALLER"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "AND"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "AND"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "MSTORE"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "ADD"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "MSTORE"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "ADD"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "KECCAK256"
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "SLOAD"
										},
										{
											"begin": 2094,
											"end": 2118,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2094,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "SWAP2"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "SWAP1"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "AND"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2094,
											"end": 2129,
											"name": "JUMPDEST"
										},
										{
											"begin": 2071,
											"end": 2079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP1"
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "AND"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "AND"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP2"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "MSTORE"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "ADD"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "SWAP1"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP2"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "MSTORE"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "ADD"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "KECCAK256"
										},
										{
											"begin": 2071,
											"end": 2129,
											"name": "DUP2"
										},
										{
											"begin": 2071,
											"end": 2129,
											"name": "SWAP1"
										},
										{
											"begin": 2071,
											"end": 2129,
											"name": "SSTORE"
										},
										{
											"begin": 2071,
											"end": 2129,
											"name": "POP"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "DUP3"
										},
										{
											"begin": 2161,
											"end": 2169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2178,
											"name": "DUP7"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "AND"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "AND"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "DUP2"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "MSTORE"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "ADD"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "SWAP1"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "DUP2"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "MSTORE"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "ADD"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "KECCAK256"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "SLOAD"
										},
										{
											"begin": 2161,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2161,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "SWAP2"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "SWAP1"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "AND"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "JUMPDEST"
										},
										{
											"begin": 2140,
											"end": 2148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "DUP1"
										},
										{
											"begin": 2149,
											"end": 2157,
											"name": "DUP6"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "AND"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "AND"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "DUP2"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "MSTORE"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "ADD"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "SWAP1"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "DUP2"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "MSTORE"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "ADD"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "KECCAK256"
										},
										{
											"begin": 2140,
											"end": 2194,
											"name": "DUP2"
										},
										{
											"begin": 2140,
											"end": 2194,
											"name": "SWAP1"
										},
										{
											"begin": 2140,
											"end": 2194,
											"name": "SSTORE"
										},
										{
											"begin": 2140,
											"end": 2194,
											"name": "POP"
										},
										{
											"begin": 2231,
											"end": 2239,
											"name": "DUP3"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "AND"
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "CALLER"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "AND"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "DUP5"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "MLOAD"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "DUP1"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "DUP3"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "DUP2"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "MSTORE"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "ADD"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "SWAP2"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "POP"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "POP"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "MLOAD"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "DUP1"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "SWAP2"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "SUB"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "SWAP1"
										},
										{
											"begin": 2210,
											"end": 2251,
											"name": "LOG3"
										},
										{
											"begin": 2306,
											"end": 2310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2299,
											"end": 2310,
											"name": "SWAP1"
										},
										{
											"begin": 2299,
											"end": 2310,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP3"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "SWAP2"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 2318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "JUMPDEST"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SLOAD"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "EXP"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "DIV"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "EQ"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPI"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "REVERT"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 3620,
											"end": 3626,
											"name": "DUP1"
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "SLOAD"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "ADD"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "SWAP3"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "DUP2"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "SSTORE"
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3660,
											"end": 3672,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3660,
											"end": 3672,
											"name": "SLOAD"
										},
										{
											"begin": 3637,
											"end": 3645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "CALLER"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "AND"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "AND"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "DUP2"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "MSTORE"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "ADD"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "SWAP1"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "DUP2"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "MSTORE"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "ADD"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "KECCAK256"
										},
										{
											"begin": 3637,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3637,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3637,
											"end": 3672,
											"name": "SSTORE"
										},
										{
											"begin": 3637,
											"end": 3672,
											"name": "POP"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "POP"
										},
										{
											"begin": 3535,
											"end": 3715,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "JUMPDEST"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SLOAD"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "EXP"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "SWAP1"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "DIV"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "EQ"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPI"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "REVERT"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "DUP1"
										},
										{
											"begin": 3800,
											"end": 3812,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3800,
											"end": 3812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "DUP3"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "DUP3"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SLOAD"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SUB"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SWAP3"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "POP"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "POP"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "DUP2"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SWAP1"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SSTORE"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "POP"
										},
										{
											"begin": 3856,
											"end": 3868,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3856,
											"end": 3868,
											"name": "SLOAD"
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "DUP1"
										},
										{
											"begin": 3842,
											"end": 3852,
											"name": "CALLER"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "AND"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "AND"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "DUP2"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "MSTORE"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "ADD"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "SWAP1"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "DUP2"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "MSTORE"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "ADD"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "KECCAK256"
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "DUP2"
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "SWAP1"
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "SSTORE"
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3910,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "JUMPDEST"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "DUP5"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "AND"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "AND"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "KECCAK256"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "DUP4"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "AND"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "AND"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "DUP2"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "MSTORE"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "ADD"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "SWAP1"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "DUP2"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "MSTORE"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "ADD"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "KECCAK256"
										},
										{
											"begin": 2666,
											"end": 2694,
											"name": "SLOAD"
										},
										{
											"begin": 2659,
											"end": 2694,
											"name": "SWAP1"
										},
										{
											"begin": 2659,
											"end": 2694,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP3"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "SWAP2"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "JUMPDEST"
										},
										{
											"begin": 110,
											"end": 117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 141,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 141,
											"name": "GT"
										},
										{
											"begin": 135,
											"end": 141,
											"name": "ISZERO"
										},
										{
											"begin": 128,
											"end": 142,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 128,
											"end": 142,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 142,
											"name": "INVALID"
										},
										{
											"begin": 128,
											"end": 142,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 128,
											"end": 142,
											"name": "JUMPDEST"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 185,
											"end": 186,
											"name": "DUP4"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "SWAP3"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 198,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 282,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 299,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP5"
										},
										{
											"begin": 294,
											"end": 299,
											"name": "ADD"
										},
										{
											"begin": 282,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 282,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP4"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP2"
										},
										{
											"begin": 315,
											"end": 321,
											"name": "LT"
										},
										{
											"begin": 315,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 308,
											"end": 322,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 308,
											"end": 322,
											"name": "JUMPI"
										},
										{
											"begin": 308,
											"end": 322,
											"name": "INVALID"
										},
										{
											"begin": 308,
											"end": 322,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 308,
											"end": 322,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 339,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 339,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 339,
											"name": "POP"
										},
										{
											"begin": 331,
											"end": 339,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "SWAP3"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "SWAP2"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 347,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"459E0DFB690370A8FB44E20926D960E5E65E9618653142C0DCE84E4511E1DEC4": "596f7520446f6e277420486176652053756666696369656e742042616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addAddress(address)": "38eada1c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnSupply(uint256)": "d595c331",
							"decimals()": "313ce567",
							"incrementSupply(uint256)": "cbbd8a04",
							"name()": "06fdde03",
							"selfDestruct()": "9cb8a26a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferWhiteList(address,uint256)": "5c0246c9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_manger\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"approved_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"incrementSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Tutorial1/tutorial2.sol\":\"IntelliContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tutorial1/tutorial2.sol\":{\"keccak256\":\"0xc5f2d7e48f8a87480905a21eff2e312044e4446c5fdafd200f493374d8912ad7\",\"urls\":[\"bzz-raw://f9bad0e50b78597a99ba4a421ad83526430f2817239956ab8f4a3412129e46ba\",\"dweb:/ipfs/QmZH3a58uvysvBuWw7RwNHqdfaV5DjFfEbJtCtGM2e6zVA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 92,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 94,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 96,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "ownerCon",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 373,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "whiteList",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 376,
								"contract": "Tutorial1/tutorial2.sol:IntelliContract",
								"label": "whiteListCount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Tutorial1/tutorial2.sol\":27:350  library SafeMath { \r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tutorial1/tutorial2.sol\":27:350  library SafeMath { \r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820166d52f5968705f83c9bc0359b209d77035763ea146bbb2527a965414e6e630f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820166d52f5968705f83c9bc0359b209d77035763ea146bbb2527a965414e6e630f64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 AND PUSH14 0x52F5968705F83C9BC0359B209D77 SUB JUMPI PUSH4 0xEA146BBB 0x25 0x27 0xA9 PUSH6 0x414E6E630F64 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "27:323:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820166d52f5968705f83c9bc0359b209d77035763ea146bbb2527a965414e6e630f64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 AND PUSH14 0x52F5968705F83C9BC0359B209D77 SUB JUMPI PUSH4 0xEA146BBB 0x25 0x27 0xA9 PUSH6 0x414E6E630F64 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "27:323:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820166d52f5968705f83c9bc0359b209d77035763ea146bbb2527a965414e6e630f64736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 350,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "ADDRESS"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Tutorial1/tutorial2.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tutorial1/tutorial2.sol\":{\"keccak256\":\"0xc5f2d7e48f8a87480905a21eff2e312044e4446c5fdafd200f493374d8912ad7\",\"urls\":[\"bzz-raw://f9bad0e50b78597a99ba4a421ad83526430f2817239956ab8f4a3412129e46ba\",\"dweb:/ipfs/QmZH3a58uvysvBuWw7RwNHqdfaV5DjFfEbJtCtGM2e6zVA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Tutorial1/tutorial2.sol": {
				"ast": {
					"absolutePath": "Tutorial1/tutorial2.sol",
					"exportedSymbols": {
						"IntelliContract": [
							463
						],
						"SafeMath": [
							46
						]
					},
					"id": 464,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "119:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 11,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 12,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "135:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 10,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "128:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "128:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "128:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "185:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "189:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "185:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 19,
												"nodeType": "Return",
												"src": "178:12:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "65:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "76:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "64:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "110:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "109:9:0"
									},
									"scope": 46,
									"src": "52:146:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "273:74:0",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "282:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 32,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "294:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 33,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "298:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "282:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "308:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "308:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "308:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "338:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 43,
												"nodeType": "Return",
												"src": "331:8:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "219:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "264:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "263:9:0"
									},
									"scope": 46,
									"src": "206:141:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 464,
							"src": "27:323:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 463,
							"linearizedBaseContracts": [
								463
							],
							"name": "IntelliContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 49,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "389:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 47,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "389:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "496e74656c6c69436f696e",
										"id": 48,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "419:13:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3ab1fe60837081c128bd39ffa871e319b3c869ce53c69aa982b6834b361910e3",
											"typeString": "literal_string \"IntelliCoin\""
										},
										"value": "IntelliCoin"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 52,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "512:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 50,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "512:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "495443",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "544:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2be63ad6c9dc22c3bcb4e494a85ef22c73f0025ba32027cd2769511789afbef1",
											"typeString": "literal_string \"ITC\""
										},
										"value": "ITC"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 55,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "634:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 53,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "634:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "667:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 63,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "854:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": false,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "900:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "853:59:0"
									},
									"src": "839:74:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 71,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "934:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "956:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": false,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "976:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "933:55:0"
									},
									"src": "919:70:0"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1027:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 74,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1047:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1047:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 76,
																"name": "ownerCon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1061:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1047:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 481,
														"src": "1038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1038:32:0"
											},
											{
												"id": 80,
												"nodeType": "PlaceholderStatement",
												"src": "1081:1:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1027:0:0"
									},
									"src": "1007:83:0",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 86,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "1102:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 85,
										"keyType": {
											"id": 83,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1110:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1102:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 84,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1121:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "1147:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 87,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1155:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1147:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 90,
											"keyType": {
												"id": 88,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1175:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1166:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 89,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1186:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "1275:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1275:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 96,
									"name": "ownerCon",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "1302:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 95,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1302:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"id": 99,
									"libraryName": {
										"contractScope": null,
										"id": 97,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 46,
										"src": "1331:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$46",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1325:27:0",
									"typeName": {
										"id": 98,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1344:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1395:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1457:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1472:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1457:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1457:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 108,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1482:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 111,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "1491:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1491:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1482:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1505:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1482:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "1482:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 115,
														"name": "ownerCon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1587:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1598:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1598:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1587:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1587:21:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "total",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1372:15:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:0"
									},
									"scope": 463,
									"src": "1361:255:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1679:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 126,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1690:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 125,
												"id": 127,
												"nodeType": "Return",
												"src": "1683:19:0"
											}
										]
									},
									"documentation": null,
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1670:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1669:9:0"
									},
									"scope": 463,
									"src": "1626:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1810:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1828:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "inputAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1837:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1828:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 139,
												"nodeType": "Return",
												"src": "1821:29:0"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "inputAddress",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1761:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:22:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1804:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1804:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:6:0"
									},
									"scope": 463,
									"src": "1742:117:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1971:347:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 151,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1990:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 152,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2003:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 155,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 153,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "2012:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2012:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2003:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1990:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520446f6e277420486176652053756666696369656e742042616c616e6365",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2024:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4",
																"typeString": "literal_string \"You Don't Have Sufficient Balance\""
															},
															"value": "You Don't Have Sufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4",
																"typeString": "literal_string \"You Don't Have Sufficient Balance\""
															}
														],
														"id": 150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 482,
														"src": "1982:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1982:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 160,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 163,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "2080:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2080:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2071:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 169,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2119:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 164,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2094:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 167,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 165,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "2103:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2103:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2094:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2094:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2094:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2071:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2071:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 173,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2140:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 175,
														"indexExpression": {
															"argumentTypes": null,
															"id": 174,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2149:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2140:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 180,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2184:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 176,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2161:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 178,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "2170:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2161:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "2161:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2161:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2140:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2140:54:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "2219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2219:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 187,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2231:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2241:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2210:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2210:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "2205:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2306:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 149,
												"id": 192,
												"nodeType": "Return",
												"src": "2299:11:0"
											}
										]
									},
									"documentation": null,
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1914:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"name": "numTokens",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1932:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1913:34:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1965:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1965:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1964:6:0"
									},
									"scope": 463,
									"src": "1896:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2406:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 203,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "2417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 207,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "2425:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2425:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2417:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 208,
														"indexExpression": {
															"argumentTypes": null,
															"id": 206,
															"name": "approved_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2437:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2417:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 209,
														"name": "numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2454:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2417:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "2417:46:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "2488:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2488:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 215,
															"name": "approved_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2500:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 216,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2515:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2479:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "EmitStatement",
												"src": "2474:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2543:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 202,
												"id": 220,
												"nodeType": "Return",
												"src": "2536:11:0"
											}
										]
									},
									"documentation": null,
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "approved_addr",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2345:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"name": "numTokens",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2344:39:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2399:6:0"
									},
									"scope": 463,
									"src": "2328:227:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2648:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 231,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 233,
														"indexExpression": {
															"argumentTypes": null,
															"id": 232,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2674:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2666:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 235,
													"indexExpression": {
														"argumentTypes": null,
														"id": 234,
														"name": "token_manger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2681:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2666:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 230,
												"id": 236,
												"nodeType": "Return",
												"src": "2659:35:0"
											}
										]
									},
									"documentation": null,
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"name": "token_manger",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2599:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2583:37:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2642:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2641:6:0"
									},
									"scope": 463,
									"src": "2565:137:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2871:391:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2890:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 251,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2903:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 253,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "2912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2903:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2890:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 481,
														"src": "2882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2882:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2882:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 258,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2942:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 259,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "2955:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 261,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 260,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "2963:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2955:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 264,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 262,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "2970:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2970:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2955:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2942:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 481,
														"src": "2934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2934:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "2934:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 268,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2995:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 270,
														"indexExpression": {
															"argumentTypes": null,
															"id": 269,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3004:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2995:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 275,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3033:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 271,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3013:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 273,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 272,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "3022:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3013:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3013:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3013:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2995:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2995:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 279,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "3054:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 283,
															"indexExpression": {
																"argumentTypes": null,
																"id": 280,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "3062:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3054:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 284,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3069:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3054:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 292,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3114:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 285,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "3083:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 287,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 286,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "3091:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3083:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 290,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 288,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "3098:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3098:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3083:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3083:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3083:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3054:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "3054:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 296,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "3135:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 298,
														"indexExpression": {
															"argumentTypes": null,
															"id": 297,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3135:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 303,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3173:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 299,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3153:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 301,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3162:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3153:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "3153:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3153:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3135:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "3135:48:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 308,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3208:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 310,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3222:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "EmitStatement",
												"src": "3194:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3250:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 248,
												"id": 314,
												"nodeType": "Return",
												"src": "3243:11:0"
											}
										]
									},
									"documentation": null,
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"name": "buyer",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "numTokens",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2833:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2802:46:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2865:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2864:6:0"
									},
									"scope": 463,
									"src": "2781:481:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3428:83:0",
										"statements": [
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "3439:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 321,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3439:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 323,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3463:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3463:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3439:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 327,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 326,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "3484:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "3484:19:0"
											}
										]
									},
									"documentation": null,
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 319,
											"modifierName": {
												"argumentTypes": null,
												"id": 318,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 82,
												"src": "3418:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3418:9:0"
										}
									],
									"name": "selfDestruct",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3408:2:0"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3428:0:0"
									},
									"scope": 463,
									"src": "3387:124:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "3593:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 338,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "3604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "3620:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3604:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 342,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "3637:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 345,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 343,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3646:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3637:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 346,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "3660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3637:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3637:35:0"
											}
										]
									},
									"documentation": null,
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 336,
											"modifierName": {
												"argumentTypes": null,
												"id": 335,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 82,
												"src": "3583:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3583:9:0"
										}
									],
									"name": "incrementSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3560:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3559:16:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3593:0:0"
									},
									"scope": 463,
									"src": "3535:180:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3789:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 357,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "3800:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 358,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "3816:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3800:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "3800:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 361,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "3833:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 364,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3842:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3842:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3833:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 365,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "3856:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3833:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3833:35:0"
											}
										]
									},
									"documentation": null,
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 355,
											"modifierName": {
												"argumentTypes": null,
												"id": 354,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 82,
												"src": "3778:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3778:9:0"
										}
									],
									"name": "burnSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3754:16:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:0:0"
									},
									"scope": 463,
									"src": "3735:175:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 373,
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "3929:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 372,
										"keyType": {
											"id": 370,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3937:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3929:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 371,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3948:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 376,
									"name": "whiteListCount",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "3974:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 374,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3974:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3999:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "4052:213:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4066:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 383,
														"indexExpression": {
															"argumentTypes": null,
															"id": 382,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "4076:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4066:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4084:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4066:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "4171:87:0",
													"statements": []
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "4063:195:0",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "4086:81:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "whiteList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "4102:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 388,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 387,
																		"name": "adr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "4112:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4102:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4119:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4102:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "4102:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 392,
																	"name": "whiteListCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "4136:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4154:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4136:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "4136:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "adr",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4030:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4029:13:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4052:0:0"
									},
									"scope": 463,
									"src": "4010:255:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4429:424:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 410,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "4448:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 412,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 411,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "4458:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4448:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4469:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4448:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "72656369766572206e6f742070726573656e7420696e2077686974656c697374",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4471:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550bb8d2250371e523a5015943883650c30b522c68dba1d9904b8db0c9a6797c",
																"typeString": "literal_string \"reciver not present in whitelist\""
															},
															"value": "reciver not present in whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_550bb8d2250371e523a5015943883650c30b522c68dba1d9904b8db0c9a6797c",
																"typeString": "literal_string \"reciver not present in whitelist\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 482,
														"src": "4440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4440:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "4440:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 419,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "4525:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4538:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 423,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 421,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "4547:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4547:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4538:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4525:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520446f6e277420486176652053756666696369656e742042616c616e6365",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4559:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4",
																"typeString": "literal_string \"You Don't Have Sufficient Balance\""
															},
															"value": "You Don't Have Sufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_459e0dfb690370a8fb44e20926d960e5e65e9618653142c0dce84e4511e1dec4",
																"typeString": "literal_string \"You Don't Have Sufficient Balance\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															481,
															482
														],
														"referencedDeclaration": 482,
														"src": "4517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4517:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "4517:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "4606:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 431,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "4615:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4606:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "4654:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 432,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4629:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 433,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "4638:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4638:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4629:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "4629:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4629:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4606:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "4606:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "4675:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "4684:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4675:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 448,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "4719:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4696:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "4705:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4696:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "4696:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4696:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4675:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "4675:54:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "4754:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4754:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "4766:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 456,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4776:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4745:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4745:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "4740:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4841:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 408,
												"id": 460,
												"nodeType": "Return",
												"src": "4834:11:0"
											}
										]
									},
									"documentation": null,
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWhiteList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"name": "numTokens",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4371:34:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4423:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4422:6:0"
									},
									"scope": 463,
									"src": "4345:508:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 464,
							"src": "355:4501:0"
						}
					],
					"src": "0:4866:0"
				},
				"id": 0
			}
		}
	}
}